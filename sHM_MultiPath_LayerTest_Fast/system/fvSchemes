/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    default    cellLimited leastSquares 1.0;
    grad(p)    cellLimited leastSquares 1.0;
    grad(U)    cellLimited leastSquares 1.0;
}

divSchemes
{
    default Gauss linearUpwindV unlimited;
    div(phi,U) bounded Gauss localBlended upwind linearUpwindV grad(U);
    div(phi,k) bounded Gauss linearUpwind limitedGrad;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
    div(phi,omega) bounded Gauss linearUpwind limitedGrad;
    div(div(phi,U)) bounded Gauss localBlended upwind linearUpwindV grad(U);
}

laplacianSchemes
{
    default Gauss linear limited corrected 0.5;
    laplacian((rho*nuEff),U) Gauss linear limited corrected 0.5;
    laplacian((rhoRef|A(U)),p) relaxedNonOrthoGauss linear limited corrected 0.5;
    laplacian(1,p) Gauss linear corrected;
    laplacian(1,Phi)  Gauss linear corrected;
    laplacian(diffusivity,cellDisplacement) Gauss linear corrected;
}

interpolationSchemes
{
    default linear;
    interpolate(HbyA) linear;
    interpolate(U) linear;
}

snGradSchemes
{
    default limited 0.5;
}

wallDist
{
    method          meshWave;
}

fluxRequired
{
    default no;
    p ;
}

// ************************************************************************* //
